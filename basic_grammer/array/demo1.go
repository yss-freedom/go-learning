package main

/*
Go语言中的数组（Array）和切片（Slice）是处理数据的两种重要数据结构。
数组是一种相同数据类型、并且具有固定长度的序列，而切片则是对数组或另一个切片的一个连续片段的引用，提供了一种灵活且强大的方式来操作数据集合。
1. 数组的声明
数组和其他变量定义没什么区别，唯一的就是这个是一组数，需要给一个大小 [6]int [10]string
数组是一个相同类型数据的有序集合，通过下标来取出对应的数据

2. 数组几个特点：
1、长度必须是确定的，如果不确定，就不是数组，大小不可以改变
2、元素必须是相，同类型不能多个类型混合, [any也是类型，可以存放任意类型的数据]
3、数组的中的元素类型，可以是我们学的所有的类型，int、string、float、bool、array、slice、map

3. 数组的定义方式
数组的定义： [数组的大小size] 变量的类型 ，
我们定义了一组这个类型的数组集合，大小为size，最多可以保存size个数
定义了数组数据类型， 数组中的数据必须使用同一种数据类型，否则报错
*/

import "fmt"

func main() {
	//定义数组: [数组的大小size] 变量的类型
	//定义了数据类型，数组里面必须使用同一种数据类型
	//定义了数组长度，如果某个下标未赋值，会给出其数据类型的默认值

	//var a = [5]int{1, 2, 3, 4, 5}
	//fmt.Println(a)

	//数组赋值：
	//声明数组长度和数据类型
	var a [5]int
	// 给数组赋值,下标index，所有的数组下标都是从0开始的。
	a[0] = 100
	a[1] = 200
	a[2] = 300
	a[3] = 400
	a[4] = 500

	//打印数组
	fmt.Println(a)

	//通过下标方式获取数组某元素
	fmt.Println(a[1])

	//获取数组长度和数组容量
	//数组中的常用方法 len()获取数组的长度 cap() 获取数组的容量
	//数组的容量在定义后就不能更改，而切片的容量在定义后可以更改。
	fmt.Println("数组长度:", len(a))
	fmt.Println("数组容量", cap(a))
	//修改数组的值，直接通过下标修改
	a[2] = 3000
	fmt.Println(a)
	fmt.Println(a[2])

}
