package main

//为了节省计算机资源，我们希望排序完之后不再继续进行比较了，怎么实现呢？
//看如下代码
//临时变量检测法

import "fmt"

func main() {
	a := [...]int{21, 72, 564, 27, -12, 0, 32, 999, 54, 81}
	//打印最初数组
	fmt.Println("最初数组", a)

	//冒泡排序
	for i := 1; i < len(a); i++ {
		//交换之前先将a赋值给一个临时变量。当交换结束，a与临时变量相同，表示已经排序完成
		temp := a
		//筛选出来最大数字后就不需要再次进行比较了
		for j := 0; j < len(a)-i; j++ {
			if a[j] > a[j+1] {
				a[j], a[j+1] = a[j+1], a[j]
			}

		}
		//排序好后结束循环
		//交换完成判断，a是否发生了变化，如果没变表示排序结束，结束循环
		if a == temp {
			break
		}

		fmt.Println("第", i, "次交换", a)

	}
	fmt.Println("排序后的数组:", a)

}
