package main

import (
	"fmt"
	"time"
)

//3. 时间的格式化
/*
Go语言允许你按照特定的格式来格式化时间对象，或者将字符串按照指定的格式解析为时间对象。
time.Time 提供了 Format 方法来格式化时间。
func (t Time) Format(layout string) string
Go语言的时间格式化模板不是常见的Y-m-d H:M:S，而是使用Go的诞生时间2006年1月2日 15点04分作为记忆口诀。
格式化模板使用Go的出生时间“2006年1月2日 15时04分05秒”（记忆口诀为“2006 1 2 3 4 5”）。
模板必须用这个时间，否则格式化不了
*/

func main() {
	// 时间格式化 2023-02-23 20:43:49
	// 格式化模板： yyyy-MM-dd HH:mm:ss
	// Go语言诞生的时间作为格式化模板：2006年1月2号下午3点4分5秒
	// Go语言格式化时间的代码：2006-01-02 15:04:05  （记忆方式：2006 12 345）
	// 固定的："2006-01-02 15:04:05"
	now := time.Now()

	// 24小时制
	fmt.Println(now.Format("2006-01-02 15:04:05")) //2024-09-29 16:34:52

	// 12小时制
	fmt.Println(now.Format("2006-01-02 03:04:05 PM")) //2024-09-29 04:34:52 PM

	// 自定义格式
	fmt.Println(now.Format("Jan 2, 2006 at 3:04pm (MST)")) // Sep 29, 2024 at 4:34pm (CST)
	fmt.Println(now.Format("2006/01/02 15:04"))            // 2024/09/29 16:34
	fmt.Println(now.Format("15:04 2006/01/02"))            // 16:34 2024/09/29
	fmt.Println(now.Format("2006/01/02"))                  // 2024/09/29

}
